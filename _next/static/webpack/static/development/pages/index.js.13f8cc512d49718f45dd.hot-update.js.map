{"version":3,"file":"static/webpack/static/development/pages/index.js.13f8cc512d49718f45dd.hot-update.js","sources":["webpack:///./components/Home/Promise/index.js"],"sourcesContent":["import cogoToast from 'cogo-toast';\n\nimport Paragraph from '../../../common-util/paragraph';\nimport CodePanel from '../../../common-util/code-panel';\nimport CodeBlock from '../../../common-util/code-block';\nimport Button from '../../../common-util/button';\n\nimport Section, { Group } from './styles';\n\nconst showToast = () => {\n\tcogoToast.loading('Loading your data...').then(() => {\n\t\tcogoToast.success('Data Successfully Loaded');\n\t});\n};\n\nconst Types = () => (\n\t<CodePanel heading=\"Returns a Promise, With Useful Callbacks\">\n\t\t<Section>\n\t\t\t<Group>\n\t\t\t\t<Paragraph>\n\t\t\t\t\tReturns a promise which resolves when the toast is about to hide.\n\t\t\t\t</Paragraph>\n\t\t\t\t<Paragraph>\n\t\t\t\t\tThis can be useful to do some action when the toast has completed showing.\n\t\t\t\t</Paragraph>\n\t\t\t</Group>\n\t\t\t<Group className=\"code\">\n\t\t\t\t<CodeBlock>\n\t\t\t\t\t<div>{`cogoToast.loading(\"Loading your data...\").then(()=>{`}</div>\n\t\t\t\t\t{`    cogoToast.success(\"Data Successfully Loaded\");`}\n\t\t\t\t\t<div>{`});`}</div>\n\t\t\t\t</CodeBlock>\n\t\t\t\t<Button className=\"primary\" onClick={showToast}>\n\t\t\t\t\tShow Me\n\t\t\t\t</Button>\n\t\t\t</Group>\n\t\t\t<Group>\n\t\t\t\t<Paragraph>\n\t\t\t\t\tWhen hideAfter = 0, It returns a callback function that hides the toast, instead\n\t\t\t\t\tof a promise.\n\t\t\t\t</Paragraph>\n\t\t\t</Group>\n\t\t</Section>\n\t</CodePanel>\n);\n\nexport default Types;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AA8BA;;;;A","sourceRoot":""}